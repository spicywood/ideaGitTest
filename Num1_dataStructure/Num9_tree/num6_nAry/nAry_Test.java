package Num1_dataStructure.Num9_tree.num6_nAry;

/*
    树家族是为了实现方便快捷的查找而存在的。树的高度是命中查找的一个不可抗拒的时间下限。
    在一定的数据条件下，树的高度和宽度是互相制约的。（就像一定面积下，矩形的长和宽是互相制约的）
    而树家族中最简单的二叉树，尽管易于实现，却不能有实际的价值。
    其最最令人发指的是二叉树的高度太高。
    n叉树的提出和实现解决了二叉树的不足，典型的n叉树有：2-3-4树/红黑树和B树。

    在二叉树中，每个节点有数据项，最多有两个子节点。如果允许每个节点可以有更多的数据项和更多的子节点，就是多叉树（multiway tree）
    后面我们讲解的2-3树，2-3-4树就是多叉树，多叉树通过重新组织节点，减少树的高度，能对二叉树进行优化。

 */
public class nAry_Test {
    public static void main(String[] args) {

    }
}
